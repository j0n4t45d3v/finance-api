services:
  api1:
    build: ..
    restart: on-failure
    environment:
      PROFILE: prod
      DATABASE_URL: jdbc:postgresql://database:${DATABASE_PORT}/${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      SERVER_PORT: ${SERVER_PORT}
      JWT_ACCESS_TOKEN_EXPIRE_TIME: ${JWT_ACCESS_TOKEN_EXPIRE_TIME}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_TOKEN_EXPIRE_TIME: ${JWT_REFRESH_TOKEN_EXPIRE_TIME}
    ports:
      - "8080:8080"
    depends_on:
      - database

  api2:
    build: ..
    restart: on-failure
    environment:
      PROFILE: prod
      DATABASE_URL: jdbc:postgresql://database:${DATABASE_PORT}/${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      SERVER_PORT: ${SERVER_PORT}
      JWT_ACCESS_TOKEN_EXPIRE_TIME: ${JWT_ACCESS_TOKEN_EXPIRE_TIME}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_TOKEN_EXPIRE_TIME: ${JWT_REFRESH_TOKEN_EXPIRE_TIME}
    ports:
      - "8081:8080"
    depends_on:
      - database

  database:
    image: postgres:15.12-alpine3.21
    container_name: postgres-service
    restart: always
    ports:
      - "${DATABASE_PORT}:5432"
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - data:/var/lib/postgresql/data

volumes:
  data:
